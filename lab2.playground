import Cocoa

//Exercies: Functions
//1
func minValue (_ a: Int,_ b: Int) -> Int {
    if(a < b){
        return a;
    }
    return b;
}
print(minValue(49,4));

//2

func zad2 (_ a: Int) -> Int {
    return a%10;
}
print(zad2(49234));

//3
func divides (_ a: Int,_ b: Int) -> Bool {
    if(a%b==0){
        return true;
    }
    return false;
}

func countDivisors (_ a: Int) -> Int {
    var sum = 0;
    for i in 1...a{
        if(a%i==0){
            sum = sum + 1;
        }
    }
    return sum;
}

func isPrime (_ a: Int) -> Bool {
    if(a > 2){
        return false;
    }
    for i in 2...a/2{
        if(a%i==0){
            return false;
        }
    }
    return true;
}

print(divides(40,4));
print(countDivisors(49));
print(isPrime(49));

//Closures
//1
func smartBart(_ n: Int,_ b: () -> Void) {
    for _ in 1...n {
        b()
    }
}

let message = {
    print("I will pass this course with best mark, because Swift is great!")
}

smartBart(3,message)

//2
let numbers = [10, 16, 18, 30, 38, 40, 44, 50]
let numbers2 = numbers.filter{$0 % 4 == 0};
print(numbers2);

//3
print(numbers.reduce(numbers[0]){max($0,$1)});

//4
var strings = ["Gdansk", "University", "of", "Technology"]
let sentence = strings.reduce("") { $0 == "" ? $1 : $0 + " " + $1 }
print(sentence)

//5
let numbers3 = [1, 2 ,3 ,4, 5, 6]
let sumOfSquares = numbers3.filter { $0 % 2 != 0 }.map { $0 * $0 }.reduce(0, +)
print(sumOfSquares)

//Tuples
//1
func minmax(_ a: Int,_ b: Int) -> (Int,Int) {
    return a < b ? (a, b) : (b, a)
}
var zmienna = minmax(10, 5);
print(zmienna);
//2
var stringsArray = ["gdansk", "university", "gdansk", "university", "university", "of", "technology", "technology", "gdansk", "gdansk"]

var countedStrings: [(String, Int)] = []
let uniqueStrings = Set(stringsArray);
for string in uniqueStrings {
    let count = stringsArray.filter { $0 == string }.count
    countedStrings.append((string, count))
}
print(countedStrings)

//Enums
//1

enum Day: String{
    case monday
    case tuesday
    case wednesday
    case thursday
    case friday
    case saturday
    case sunday
    
    func intValue() -> Int{
        switch self{
        case .monday:
            return 1
        case .tuesday:
            return 2
        case .wednesday:
            return 3
        case .thursday:
            return 4
        case .friday:
            return 5
        case .saturday:
            return 6
        case .sunday:
            return 7
        }
    }
    
    func emoji() -> String {
            switch self {
            case .monday:
                return "🌤"
            case .tuesday:
                return "🌦"
            case .wednesday:
                return "🌧"
            case .thursday:
                return "🌩"
            case .friday:
                return "🌘"
            case .saturday:
                return "🌈"
            case .sunday:
                return "🌞"
            }
        }
}

let day = Day.saturday
print(day.emoji())






